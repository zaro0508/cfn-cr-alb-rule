AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ALB rule-making lambda

Parameters:
  OidcClientSecretKeyName:
    Description: 'The name of the key that stores the OAuth 2.0 client secret'
    Type: String
  OidcIssuer:
    Description: 'The OIDC issuer identifier of the identity provider'
    Type: String
  OidcAuthorizationEndpoint:
    Description: 'The authorization endpoint of the identity provider'
    Type: String
  OidcTokenEndpoint:
    Description: 'The token endpoint of the identity provider'
    Type: String
  OidcUserInfoEndpoint:
    Description: 'The user info endpoint of the identity provider'
    Type: String
  OidcClientId:
    Description: 'The OAuth 2.0 client identifier'
    Type: String

Globals:
  Function:
    Timeout: 30

Resources:
  ALBListenerRuleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ruler/
      Handler: app.handler
      Runtime: python3.6
      Role: !GetAtt ALBListenerRuleFunctionRole.Arn
      Environment:
        Variables:
          OIDC_CLIENT_SECRET_KEYNAME: !Ref OidcClientSecretKeyName
          OIDC_ISSUER: !Ref OidcIssuer
          OIDC_AUTHORIZATION_ENDPOINT: !Ref OidcAuthorizationEndpoint
          OIDC_TOKEN_ENDPOINT: !Ref OidcTokenEndpoint
          OIDC_USER_INFO_ENDPOINT: !Ref OidcUserInfoEndpoint
          OIDC_CLIENT_ID: !Ref OidcClientId

  ALBListenerRuleFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref ALBListenerRuleFunctionPolicy
        - !Ref KmsDecryptManagedPolicy
        - !Ref SsmManagedPolicy

  ALBListenerRuleFunctionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: DoElbStuff
            Effect: 'Allow'
            Action:
              - 'elasticloadbalancing:*'
            Resource: '*'

  KmsDecryptManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ReadAccess
            Action:
              - 'kms:ListKeys'
              - 'kms:ListAliases'
              - 'kms:DescribeKey'
              - 'kms:ListKeyPolicies'
              - 'kms:GetKeyPolicy'
              - 'kms:GetKeyRotationStatus'
              - 'iam:ListUsers'
              - 'iam:ListRoles'
            Effect: Allow
            Resource: !GetAtt KmsKey.Arn
          - Sid: DecryptAccess
            Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
            Effect: Allow
            Resource: !GetAtt KmsKey.Arn

  SsmManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: GetParamAccess
            Action:
              - 'ssm:*'
            Effect: Allow
            Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/alb-notebook-access/AuthenticateOidcClientSecret'

  KmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub '${AWS::StackName}-KmsKey'
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "Allow administration of the key"
            Effect: "Allow"
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
                - !ImportValue
                    'Fn::Sub': '${AWS::Region}-bootstrap-CfServiceRoleArn'
                - !ImportValue
                    'Fn::Sub': '${AWS::Region}-jumpcloud-idp-ScipooldevAdminSamlProviderRoleArn'
            Action:
              - "kms:Create*"
              - "kms:Describe*"
              - "kms:Enable*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:Update*"
              - "kms:Revoke*"
              - "kms:Disable*"
              - "kms:Get*"
              - "kms:Delete*"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
            Resource: "*"
          -
            Sid: "Allow use of the key"
            Effect: "Allow"
            Principal:
              AWS:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:root'
                - !ImportValue
                    'Fn::Sub': '${AWS::Region}-bootstrap-CfServiceRoleArn'
                - !ImportValue
                    'Fn::Sub': '${AWS::Region}-jumpcloud-idp-ScipooldevAdminSamlProviderRoleArn'
            Action:
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:DescribeKey"
            Resource: "*"

  KmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub 'alias/${AWS::StackName}/KmsKey'
      TargetKeyId: !Ref KmsKey

Outputs:
  ALBListenerRuleFunctionName:
    Value: !Ref ALBListenerRuleFunction
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-FunctionName'
  ALBListenerRuleFunctionArn:
    Value: !GetAtt ALBListenerRuleFunction.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-FunctionArn'
  ALBListenerRuleFunctionRole:
    Description: 'Role reference for the Ruler lambda'
    Value: !Ref ALBListenerRuleFunctionRole
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ALBListenerRuleFunctionRole'
  ALBListenerRuleFunctionRoleArn:
    Description: 'Role ARN for the Ruler lambda'
    Value: !GetAtt ALBListenerRuleFunctionRole.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-ALBListenerRuleFunctionRoleArn'
  KmsKey:
    Value: !Ref KmsKey
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-KmsKey'
  KmsKeyAlias:
    Value: !Ref KmsKeyAlias
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-KmsKeyAlias'
  KmsKeyArn:
    Value: !GetAtt KmsKey.Arn
    Export:
      Name: !Sub '${AWS::Region}-${AWS::StackName}-KmsKeyArn'
